{
  "version": 4,
  "terraform_version": "1.5.0",
  "serial": 64,
  "lineage": "3b8f2db3-4554-5665-07a9-a9d9996a583b",
  "outputs": {
    "cluster-id": {
      "value": "c209511a-7baa-48f7-aeb2-2f04d326939c",
      "type": "string"
    },
    "endpoint": {
      "value": "https://c209511a-7baa-48f7-aeb2-2f04d326939c.k8s.ondigitalocean.com",
      "type": "string"
    },
    "ip": {
      "value": "174.138.103.34",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "kubernetes_ingress_v1",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "default/opentourney-ingress",
            "metadata": [
              {
                "annotations": {},
                "generation": 1,
                "labels": {},
                "name": "opentourney-ingress",
                "namespace": "default",
                "resource_version": "2308",
                "uid": "47c69c53-0c37-44ae-80bc-ff16c866e6b4"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "marques576.eu.org",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "frontend",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 80
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/",
                            "path_type": "Prefix"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "api",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 3000
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/api",
                            "path_type": "Prefix"
                          },
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "ws",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 8080
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/ws",
                            "path_type": "Prefix"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "",
                        "ip": "174.138.103.34"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "cloudflare_record",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/cloudflare/cloudflare\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "allow_overwrite": false,
            "comment": "",
            "created_on": "2023-06-24T23:24:29.610169Z",
            "data": [],
            "hostname": "marques576.eu.org",
            "id": "dda9c36ed9b4a389484b77530e664911",
            "metadata": {
              "auto_added": "false",
              "managed_by_apps": "false",
              "managed_by_argo_tunnel": "false",
              "source": "primary"
            },
            "modified_on": "2023-06-24T23:24:29.610169Z",
            "name": "@",
            "priority": null,
            "proxiable": true,
            "proxied": false,
            "tags": null,
            "timeouts": null,
            "ttl": 3600,
            "type": "A",
            "value": "174.138.103.34",
            "zone_id": "50657706a4f9844b2052af3293dbd0f7"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "data.kubernetes_ingress_v1.example",
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubectl_manifest.api-deployment",
            "kubectl_manifest.api_service",
            "kubectl_manifest.configmap",
            "kubectl_manifest.database-deployment",
            "kubectl_manifest.database-pvc",
            "kubectl_manifest.database-service",
            "kubectl_manifest.frontend-deployment",
            "kubectl_manifest.frontend-service",
            "kubectl_manifest.ingress-updater",
            "kubectl_manifest.ws-deployment",
            "kubectl_manifest.ws_service",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_kubernetes_cluster",
      "name": "kubernetes_cluster",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "auto_upgrade": false,
            "cluster_subnet": "10.244.0.0/16",
            "created_at": "2023-06-24 23:15:45 +0000 UTC",
            "endpoint": "https://c209511a-7baa-48f7-aeb2-2f04d326939c.k8s.ondigitalocean.com",
            "ha": false,
            "id": "c209511a-7baa-48f7-aeb2-2f04d326939c",
            "ipv4_address": "",
            "kube_config": [
              {
                "client_certificate": "",
                "client_key": "",
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHlNekEyTWpReQpNekUxTlRSYUZ3MDBNekEyTWpReU16RTFOVFJhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDMGRRNTNZMFZyQXplQ2tPSE4rZHJnSzNsaVg2YUNLOTNEaENCTEN1N3UrdjIrSlhhRgpOU1pkcmpSVmg2Y1JaakJQeU95Qnc2eU1QdzQvSU5ML3lRK0tVUUF3U05maHIrZlc4M1M2eXpCenZBeGxTTlh5CjNOSFh0YkJUVytDY1I2Z3BqNDVrK29BR0lOQ2YxVlp1UUVvOThhWTFuaGVkOXRpRXZzVHNsaWR5MldvelRUVUYKcm91UTFKRHp0MVVzRUpaTnZRZStnQ1gwNXR4dUpNSkt1TG9vcFRSZk94ME5oZmo4TXRoUVRJalgxZjBnd1BJLwpWbllDUWY4b2xkamdHbDArK1JBUFoyN3dLWTEwNTdrOXhDaDBEYWdtZlZBVzF2SDFFZGVTYjRvZDVxdmE4cEpqCnJwNks2cis2TGpubGJDdU12NE5FUlJJSzh2Z2lsTVlYejVhVkFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlNwSFhDYitScm1CUWpGRDhnRgpzL3VkN0RHRm5EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFRY2dPUVAyOXYxRS9BaUcxaXlYUG9JbC8rc1FMClV6ZXdmYlB4T1MvNVBkRjRmNllRdUsxbUpPQkZlTjduaUp2eWZzSkNaQ2JiYnZ2TU1XWG1oR2p5ekhHSkl3Yk0KS1YvdlpyRlBmN2lRQnNjTzYyd2lTbTIyendSMmc0eGV0TWN3ZmVuRzhKb2hhMUh4dnpYK3F2NnM1ai9lUDZ3awpxZll4WjRaWllETHYveC9WWTBLYzhKRzBwZXlPMHlCSXYyTENJbjAyRUFVL1ZJM0ZVZ3MxejcwY3F6a3FHMktlCkp0WGJNdlpubHMxVmh3MjdDZC9JdGx6ME0xUHJCc2d1Z256YVFGbWdUY1VMcDNMbVpLKzlXMGxmQ25iU2NZWWMKSE9CNWd4UmNRa0RFY2tIN095NFFzUmliNE5qTkZjcmUvOE9LcERkVlhQRjhxUUg3MmNOdDFON05LQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                "expires_at": "2023-07-01T23:20:45Z",
                "host": "https://c209511a-7baa-48f7-aeb2-2f04d326939c.k8s.ondigitalocean.com",
                "raw_config": "apiVersion: v1\nkind: Config\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHlNekEyTWpReQpNekUxTlRSYUZ3MDBNekEyTWpReU16RTFOVFJhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDMGRRNTNZMFZyQXplQ2tPSE4rZHJnSzNsaVg2YUNLOTNEaENCTEN1N3UrdjIrSlhhRgpOU1pkcmpSVmg2Y1JaakJQeU95Qnc2eU1QdzQvSU5ML3lRK0tVUUF3U05maHIrZlc4M1M2eXpCenZBeGxTTlh5CjNOSFh0YkJUVytDY1I2Z3BqNDVrK29BR0lOQ2YxVlp1UUVvOThhWTFuaGVkOXRpRXZzVHNsaWR5MldvelRUVUYKcm91UTFKRHp0MVVzRUpaTnZRZStnQ1gwNXR4dUpNSkt1TG9vcFRSZk94ME5oZmo4TXRoUVRJalgxZjBnd1BJLwpWbllDUWY4b2xkamdHbDArK1JBUFoyN3dLWTEwNTdrOXhDaDBEYWdtZlZBVzF2SDFFZGVTYjRvZDVxdmE4cEpqCnJwNks2cis2TGpubGJDdU12NE5FUlJJSzh2Z2lsTVlYejVhVkFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlNwSFhDYitScm1CUWpGRDhnRgpzL3VkN0RHRm5EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFRY2dPUVAyOXYxRS9BaUcxaXlYUG9JbC8rc1FMClV6ZXdmYlB4T1MvNVBkRjRmNllRdUsxbUpPQkZlTjduaUp2eWZzSkNaQ2JiYnZ2TU1XWG1oR2p5ekhHSkl3Yk0KS1YvdlpyRlBmN2lRQnNjTzYyd2lTbTIyendSMmc0eGV0TWN3ZmVuRzhKb2hhMUh4dnpYK3F2NnM1ai9lUDZ3awpxZll4WjRaWllETHYveC9WWTBLYzhKRzBwZXlPMHlCSXYyTENJbjAyRUFVL1ZJM0ZVZ3MxejcwY3F6a3FHMktlCkp0WGJNdlpubHMxVmh3MjdDZC9JdGx6ME0xUHJCc2d1Z256YVFGbWdUY1VMcDNMbVpLKzlXMGxmQ25iU2NZWWMKSE9CNWd4UmNRa0RFY2tIN095NFFzUmliNE5qTkZjcmUvOE9LcERkVlhQRjhxUUg3MmNOdDFON05LQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://c209511a-7baa-48f7-aeb2-2f04d326939c.k8s.ondigitalocean.com\n  name: do-fra1-cloudv2\ncontexts:\n- context:\n    cluster: do-fra1-cloudv2\n    user: do-fra1-cloudv2-admin\n  name: do-fra1-cloudv2\ncurrent-context: do-fra1-cloudv2\nusers:\n- name: do-fra1-cloudv2-admin\n  user:\n    token: dop_v1_cadb6cf6bc1d535da77e30bd69d3aa5d693fb3b717a3002fef76af4e1db21589\n",
                "token": "dop_v1_cadb6cf6bc1d535da77e30bd69d3aa5d693fb3b717a3002fef76af4e1db21589"
              }
            ],
            "maintenance_policy": [
              {
                "day": "any",
                "duration": "4h0m0s",
                "start_time": "12:00"
              }
            ],
            "name": "cloudv2",
            "node_pool": [
              {
                "actual_node_count": 1,
                "auto_scale": false,
                "id": "19d70694-71f3-4919-a3b6-7af9a4fcd2ce",
                "labels": null,
                "max_nodes": 0,
                "min_nodes": 0,
                "name": "cloudv2worker-pool",
                "node_count": 1,
                "nodes": [
                  {
                    "created_at": "2023-06-24 23:15:45 +0000 UTC",
                    "droplet_id": "362184208",
                    "id": "2a42fe32-d457-4971-968a-f38281ec7511",
                    "name": "cloudv2worker-pool-fktda",
                    "status": "running",
                    "updated_at": "2023-06-24 23:17:55 +0000 UTC"
                  }
                ],
                "size": "s-2vcpu-2gb",
                "tags": [
                  "node-pool-tag"
                ],
                "taint": []
              }
            ],
            "region": "fra1",
            "registry_integration": false,
            "service_subnet": "10.245.0.0/16",
            "status": "running",
            "surge_upgrade": true,
            "tags": [
              "k8s"
            ],
            "timeouts": null,
            "updated_at": "2023-06-24 23:20:36 +0000 UTC",
            "urn": "do:kubernetes:c209511a-7baa-48f7-aeb2-2f04d326939c",
            "version": "1.27.2-do.0",
            "vpc_uuid": "f888fcb9-aaba-42b5-a97c-88df2221f602"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIzIn0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "cert-manager",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cert-manager",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.5.3",
                "chart": "cert-manager",
                "name": "cert-manager",
                "namespace": "cert-manager",
                "revision": 1,
                "values": "{\"installCRDs\":true}",
                "version": "v1.5.3"
              }
            ],
            "name": "cert-manager",
            "namespace": "cert-manager",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.jetstack.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "installCRDs",
                "type": "",
                "value": "true"
              }
            ],
            "set_sensitive": [],
            "set_string": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "v1.5.3",
            "wait": true
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "cloudflare_record.example",
            "data.kubernetes_ingress_v1.example",
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubectl_manifest.api-deployment",
            "kubectl_manifest.api_service",
            "kubectl_manifest.configmap",
            "kubectl_manifest.database-deployment",
            "kubectl_manifest.database-pvc",
            "kubectl_manifest.database-service",
            "kubectl_manifest.frontend-deployment",
            "kubectl_manifest.frontend-service",
            "kubectl_manifest.ingress-updater",
            "kubectl_manifest.ws-deployment",
            "kubectl_manifest.ws_service",
            "kubernetes_namespace.create_cert_manager_namespace",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "ingress-nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "ingress-nginx",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "ingress-nginx",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.8.0",
                "chart": "ingress-nginx",
                "name": "ingress-nginx",
                "namespace": "ingress-nginx",
                "revision": 1,
                "values": "{}",
                "version": "4.7.0"
              }
            ],
            "name": "ingress-nginx",
            "namespace": "ingress-nginx",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/ingress-nginx",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "set_string": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "4.7.0",
            "wait": true
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "api-deployment",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/api",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "8a6fc1aedfde6ad4f3703c5a3cc1ae2a07fe65fa4478e7916a3125ff09869c51",
            "live_uid": "8d85fcb3-f023-4944-8718-e4ca4df9040d",
            "name": "api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "8d85fcb3-f023-4944-8718-e4ca4df9040d",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: api\n  name: api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: api\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: api\n    spec:\n      containers:\n        - env:\n            - name: COOKIE_DOMAIN\n              value: https://marques576.eu.org\n            - name: COOKIE_EXP\n              valueFrom:\n                configMapKeyRef:\n                  key: COOKIE_EXP\n                  name: opentourney-api-configmap\n            - name: COOKIE_PATH\n              valueFrom:\n                configMapKeyRef:\n                  key: COOKIE_PATH\n                  name: opentourney-api-configmap\n            - name: COOKIE_SECRET\n              valueFrom:\n                configMapKeyRef:\n                  key: COOKIE_SECRET\n                  name: opentourney-api-configmap\n            - name: CORS_ORIGINS\n              value: https://marques576.eu.org\n            - name: DATABASE_URL\n              value: postgresql://postgres:postgres@$(DATABASE_SERVICE_HOST):5432/postgres\n            - name: JET_LOGGER_FILEPATH\n              valueFrom:\n                configMapKeyRef:\n                  key: JET_LOGGER_FILEPATH\n                  name: opentourney-api-configmap\n            - name: JET_LOGGER_FORMAT\n              valueFrom:\n                configMapKeyRef:\n                  key: JET_LOGGER_FORMAT\n                  name: opentourney-api-configmap\n            - name: JET_LOGGER_MODE\n              valueFrom:\n                configMapKeyRef:\n                  key: JET_LOGGER_MODE\n                  name: opentourney-api-configmap\n            - name: JET_LOGGER_TIMESTAMP\n              valueFrom:\n                configMapKeyRef:\n                  key: JET_LOGGER_TIMESTAMP\n                  name: opentourney-api-configmap\n            - name: JWT_SECRET\n              valueFrom:\n                configMapKeyRef:\n                  key: JWT_SECRET\n                  name: opentourney-api-configmap\n            - name: NODE_ENV\n              valueFrom:\n                configMapKeyRef:\n                  key: NODE_ENV\n                  name: opentourney-api-configmap\n            - name: PORT\n              valueFrom:\n                configMapKeyRef:\n                  key: PORT\n                  name: opentourney-api-configmap\n            - name: SECURE_COOKIE\n              valueFrom:\n                configMapKeyRef:\n                  key: SECURE_COOKIE\n                  name: opentourney-api-configmap\n            - name: STEAM_API_KEY\n              valueFrom:\n                configMapKeyRef:\n                  key: STEAM_API_KEY\n                  name: opentourney-api-configmap\n            - name: SRCDS_TOKEN\n              valueFrom:\n                configMapKeyRef:\n                  key: SRCDS_TOKEN\n                  name: opentourney-api-configmap\n          image: marques576/opentourney-api\n          imagePullPolicy: Always\n          name: api\n          ports:\n            - containerPort: 3000\n          resources: {}\n      restartPolicy: Always\nstatus: {}\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: api\n  name: api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: api\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: api\n    spec:\n      containers:\n      - env:\n        - name: COOKIE_DOMAIN\n          value: https://marques576.eu.org\n        - name: COOKIE_EXP\n          valueFrom:\n            configMapKeyRef:\n              key: COOKIE_EXP\n              name: opentourney-api-configmap\n        - name: COOKIE_PATH\n          valueFrom:\n            configMapKeyRef:\n              key: COOKIE_PATH\n              name: opentourney-api-configmap\n        - name: COOKIE_SECRET\n          valueFrom:\n            configMapKeyRef:\n              key: COOKIE_SECRET\n              name: opentourney-api-configmap\n        - name: CORS_ORIGINS\n          value: https://marques576.eu.org\n        - name: DATABASE_URL\n          value: postgresql://postgres:postgres@$(DATABASE_SERVICE_HOST):5432/postgres\n        - name: JET_LOGGER_FILEPATH\n          valueFrom:\n            configMapKeyRef:\n              key: JET_LOGGER_FILEPATH\n              name: opentourney-api-configmap\n        - name: JET_LOGGER_FORMAT\n          valueFrom:\n            configMapKeyRef:\n              key: JET_LOGGER_FORMAT\n              name: opentourney-api-configmap\n        - name: JET_LOGGER_MODE\n          valueFrom:\n            configMapKeyRef:\n              key: JET_LOGGER_MODE\n              name: opentourney-api-configmap\n        - name: JET_LOGGER_TIMESTAMP\n          valueFrom:\n            configMapKeyRef:\n              key: JET_LOGGER_TIMESTAMP\n              name: opentourney-api-configmap\n        - name: JWT_SECRET\n          valueFrom:\n            configMapKeyRef:\n              key: JWT_SECRET\n              name: opentourney-api-configmap\n        - name: NODE_ENV\n          valueFrom:\n            configMapKeyRef:\n              key: NODE_ENV\n              name: opentourney-api-configmap\n        - name: PORT\n          valueFrom:\n            configMapKeyRef:\n              key: PORT\n              name: opentourney-api-configmap\n        - name: SECURE_COOKIE\n          valueFrom:\n            configMapKeyRef:\n              key: SECURE_COOKIE\n              name: opentourney-api-configmap\n        - name: STEAM_API_KEY\n          valueFrom:\n            configMapKeyRef:\n              key: STEAM_API_KEY\n              name: opentourney-api-configmap\n        - name: SRCDS_TOKEN\n          valueFrom:\n            configMapKeyRef:\n              key: SRCDS_TOKEN\n              name: opentourney-api-configmap\n        image: marques576/opentourney-api\n        imagePullPolicy: Always\n        name: api\n        ports:\n        - containerPort: 3000\n        resources: {}\n      restartPolicy: Always\nstatus: {}\n",
            "yaml_incluster": "8a6fc1aedfde6ad4f3703c5a3cc1ae2a07fe65fa4478e7916a3125ff09869c51"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubectl_manifest.configmap",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "api_service",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/api",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "7c88703617c38ddbfd2cfb28179c8a0434ae8eaa6d8323c8cb3577cc6cd0a2ed",
            "live_uid": "998e3455-b67b-449e-b545-053f9b9f6073",
            "name": "api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "998e3455-b67b-449e-b545-053f9b9f6073",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: api\n  name: api\nspec:\n  ports:\n    - name: \"3000\"\n      port: 3000\n      targetPort: 3000\n  selector:\n    app: api\nstatus:\n  loadBalancer: {}\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: api\n  name: api\nspec:\n  ports:\n  - name: \"3000\"\n    port: 3000\n    targetPort: 3000\n  selector:\n    app: api\nstatus:\n  loadBalancer: {}\n",
            "yaml_incluster": "7c88703617c38ddbfd2cfb28179c8a0434ae8eaa6d8323c8cb3577cc6cd0a2ed"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "apply_new_tls_ingress",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.k8s.io/v1/namespaces/default/ingresses/opentourney-ingress",
            "ignore_fields": null,
            "kind": "Ingress",
            "live_manifest_incluster": "234c2f0aa66c2db7f17b2948cb20ae3847ce7f3a0632c8ce960b4492a54151ec",
            "live_uid": "47c69c53-0c37-44ae-80bc-ff16c866e6b4",
            "name": "opentourney-ingress",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "47c69c53-0c37-44ae-80bc-ff16c866e6b4",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: opentourney-ingress\n  annotations:\n    cert-manager.io/issuer: \"letsencrypt-prod\" # Specify the issuer for the certificate\nspec:\n  ingressClassName: nginx\n  tls:\n    - hosts:\n        - marques576.eu.org\n      secretName: example-app-tls\n  rules:\n    - host: marques576.eu.org\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: frontend\n                port:\n                  number: 80\n          - path: /api\n            pathType: Prefix\n            backend:\n              service:\n                name: api\n                port:\n                  number: 3000\n          - path: /ws\n            pathType: Prefix\n            backend:\n              service:\n                name: ws\n                port:\n                  number: 8080\n",
            "yaml_body_parsed": "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    cert-manager.io/issuer: letsencrypt-prod\n  name: opentourney-ingress\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: marques576.eu.org\n    http:\n      paths:\n      - backend:\n          service:\n            name: frontend\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n      - backend:\n          service:\n            name: api\n            port:\n              number: 3000\n        path: /api\n        pathType: Prefix\n      - backend:\n          service:\n            name: ws\n            port:\n              number: 8080\n        path: /ws\n        pathType: Prefix\n  tls:\n  - hosts:\n    - marques576.eu.org\n    secretName: example-app-tls\n",
            "yaml_incluster": "234c2f0aa66c2db7f17b2948cb20ae3847ce7f3a0632c8ce960b4492a54151ec"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "cloudflare_record.example",
            "data.kubernetes_ingress_v1.example",
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.cert_manager",
            "helm_release.ingress-nginx",
            "kubectl_manifest.api-deployment",
            "kubectl_manifest.api_service",
            "kubectl_manifest.cert_manager_cert_issuer",
            "kubectl_manifest.cert_manager_save_cert",
            "kubectl_manifest.configmap",
            "kubectl_manifest.database-deployment",
            "kubectl_manifest.database-pvc",
            "kubectl_manifest.database-service",
            "kubectl_manifest.frontend-deployment",
            "kubectl_manifest.frontend-service",
            "kubectl_manifest.ingress-updater",
            "kubectl_manifest.ws-deployment",
            "kubectl_manifest.ws_service",
            "kubernetes_namespace.create_cert_manager_namespace",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "cert_manager_cert_issuer",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "cert-manager.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/cert-manager.io/v1/clusterissuers/letsencrypt-cluster-issuer",
            "ignore_fields": null,
            "kind": "ClusterIssuer",
            "live_manifest_incluster": "99cfc01660bc1c87b05ff870d8004c52d2c8884656cdbcf0ce3994ec6e887702",
            "live_uid": "14298fb3-2c7c-4d69-926d-4e8c92085c1b",
            "name": "letsencrypt-cluster-issuer",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "14298fb3-2c7c-4d69-926d-4e8c92085c1b",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: cert-manager.io/v1\r\nkind: ClusterIssuer\r\nmetadata:\r\n  name: letsencrypt-cluster-issuer\r\nspec:\r\n  acme:\r\n    server: https://acme-v02.api.letsencrypt.org/directory\r\n    email: 2220644@my.ipleiria.pt\r\n    privateKeySecretRef:\r\n      name: letsencrypt-cluster-issuer-key\r\n    solvers:\r\n    - http01:\r\n       ingress:\r\n         class: nginx",
            "yaml_body_parsed": "apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-cluster-issuer\nspec:\n  acme:\n    email: 2220644@my.ipleiria.pt\n    privateKeySecretRef:\n      name: letsencrypt-cluster-issuer-key\n    server: https://acme-v02.api.letsencrypt.org/directory\n    solvers:\n    - http01:\n        ingress:\n          class: nginx\n",
            "yaml_incluster": "99cfc01660bc1c87b05ff870d8004c52d2c8884656cdbcf0ce3994ec6e887702"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "cloudflare_record.example",
            "data.kubernetes_ingress_v1.example",
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.cert_manager",
            "helm_release.ingress-nginx",
            "kubectl_manifest.api-deployment",
            "kubectl_manifest.api_service",
            "kubectl_manifest.configmap",
            "kubectl_manifest.database-deployment",
            "kubectl_manifest.database-pvc",
            "kubectl_manifest.database-service",
            "kubectl_manifest.frontend-deployment",
            "kubectl_manifest.frontend-service",
            "kubectl_manifest.ingress-updater",
            "kubectl_manifest.ws-deployment",
            "kubectl_manifest.ws_service",
            "kubernetes_namespace.create_cert_manager_namespace",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "cert_manager_save_cert",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "cert-manager.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/cert-manager.io/v1/namespaces/default/certificates/example-app",
            "ignore_fields": null,
            "kind": "Certificate",
            "live_manifest_incluster": "7db9721036c203e9e171dd3d45501097ad6c4b1b7e4f4a55ae18b3f86cf72725",
            "live_uid": "ffc5190c-20cb-4d45-a558-ed3cdc1a097b",
            "name": "example-app",
            "namespace": "default",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "ffc5190c-20cb-4d45-a558-ed3cdc1a097b",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: example-app\n  namespace: default\nspec:\n  dnsNames:\n    - marques576.eu.org\n  secretName: example-app-tls\n  issuerRef:\n    name: letsencrypt-cluster-issuer\n    kind: ClusterIssuer",
            "yaml_body_parsed": "apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: example-app\n  namespace: default\nspec:\n  dnsNames:\n  - marques576.eu.org\n  issuerRef:\n    kind: ClusterIssuer\n    name: letsencrypt-cluster-issuer\n  secretName: example-app-tls\n",
            "yaml_incluster": "7db9721036c203e9e171dd3d45501097ad6c4b1b7e4f4a55ae18b3f86cf72725"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "cloudflare_record.example",
            "data.kubernetes_ingress_v1.example",
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.cert_manager",
            "helm_release.ingress-nginx",
            "kubectl_manifest.api-deployment",
            "kubectl_manifest.api_service",
            "kubectl_manifest.cert_manager_cert_issuer",
            "kubectl_manifest.configmap",
            "kubectl_manifest.database-deployment",
            "kubectl_manifest.database-pvc",
            "kubectl_manifest.database-service",
            "kubectl_manifest.frontend-deployment",
            "kubectl_manifest.frontend-service",
            "kubectl_manifest.ingress-updater",
            "kubectl_manifest.ws-deployment",
            "kubectl_manifest.ws_service",
            "kubernetes_namespace.create_cert_manager_namespace",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "configmap",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/configmaps/opentourney-api-configmap",
            "ignore_fields": null,
            "kind": "ConfigMap",
            "live_manifest_incluster": "6b027e1a5f67c9da03d10edbae28bbeaf58efe5a9bfe7cbcdb2c437e1e38159b",
            "live_uid": "a4506d9f-f77a-4798-98b0-cdbc8d850bd3",
            "name": "opentourney-api-configmap",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "a4506d9f-f77a-4798-98b0-cdbc8d850bd3",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\ndata:\n  COOKIE_EXP: \"259200000\"\n  COOKIE_PATH: /\n  COOKIE_SECRET: xxxxxxxxxxxxxx\n  JET_LOGGER_FILEPATH: jet-logger.log\n  JET_LOGGER_FORMAT: LINE\n  JET_LOGGER_MODE: CONSOLE\n  JET_LOGGER_TIMESTAMP: \"TRUE\"\n  JWT_SECRET: xxxxxxxxxxxxxx\n  NODE_ENV: development\n  PORT: \"3000\"\n  SECURE_COOKIE: \"false\"\n  STEAM_API_KEY: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  WSPORT: \"8080\"\n  SRCDS_TOKEN: 6AC229B7014173AD15284865F10A1A5A\n  API_URL: https://marques576.eu.org/api\nkind: ConfigMap\nmetadata:\n  creationTimestamp: null\n  name: opentourney-api-configmap\n",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  API_URL: https://marques576.eu.org/api\n  COOKIE_EXP: \"259200000\"\n  COOKIE_PATH: /\n  COOKIE_SECRET: xxxxxxxxxxxxxx\n  JET_LOGGER_FILEPATH: jet-logger.log\n  JET_LOGGER_FORMAT: LINE\n  JET_LOGGER_MODE: CONSOLE\n  JET_LOGGER_TIMESTAMP: \"TRUE\"\n  JWT_SECRET: xxxxxxxxxxxxxx\n  NODE_ENV: development\n  PORT: \"3000\"\n  SECURE_COOKIE: \"false\"\n  SRCDS_TOKEN: 6AC229B7014173AD15284865F10A1A5A\n  STEAM_API_KEY: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  WSPORT: \"8080\"\nkind: ConfigMap\nmetadata:\n  creationTimestamp: null\n  name: opentourney-api-configmap\n",
            "yaml_incluster": "6b027e1a5f67c9da03d10edbae28bbeaf58efe5a9bfe7cbcdb2c437e1e38159b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "database-deployment",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/database",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "df57740216359cdfd2455c7796da830bb2296e538468222e823f73cb0ff3c000",
            "live_uid": "d9355e3f-970a-4e9e-814f-1ceb5cd67037",
            "name": "database",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "d9355e3f-970a-4e9e-814f-1ceb5cd67037",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: database\n  name: database\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: database\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: database\n    spec:\n      containers:\n        - env:\n            - name: POSTGRES_PASSWORD\n              value: postgres\n            - name: POSTGRES_USER\n              value: postgres\n          image: postgres:14.1-alpine\n          name: database\n          ports:\n            - containerPort: 5432\n          resources: {}\n          volumeMounts:\n            - mountPath: /var/lib/postgresql/data\n              name: database\n              subPath: postgres\n      restartPolicy: Always\n      volumes:\n        - name: database\n          persistentVolumeClaim:\n            claimName: database\nstatus: {}\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: database\n  name: database\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: database\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: database\n    spec:\n      containers:\n      - env:\n        - name: POSTGRES_PASSWORD\n          value: postgres\n        - name: POSTGRES_USER\n          value: postgres\n        image: postgres:14.1-alpine\n        name: database\n        ports:\n        - containerPort: 5432\n        resources: {}\n        volumeMounts:\n        - mountPath: /var/lib/postgresql/data\n          name: database\n          subPath: postgres\n      restartPolicy: Always\n      volumes:\n      - name: database\n        persistentVolumeClaim:\n          claimName: database\nstatus: {}\n",
            "yaml_incluster": "df57740216359cdfd2455c7796da830bb2296e538468222e823f73cb0ff3c000"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "database-pvc",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/persistentvolumeclaims/database",
            "ignore_fields": null,
            "kind": "PersistentVolumeClaim",
            "live_manifest_incluster": "c537a11da01686f6183ab405ee232e409ff5d944635ebfc4270f38eb56189283",
            "live_uid": "b761f630-3a57-4557-a9ff-3ad2cac13161",
            "name": "database",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "b761f630-3a57-4557-a9ff-3ad2cac13161",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  creationTimestamp: null\n  name: database\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 100Mi\nstatus: {}\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  creationTimestamp: null\n  name: database\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 100Mi\nstatus: {}\n",
            "yaml_incluster": "c537a11da01686f6183ab405ee232e409ff5d944635ebfc4270f38eb56189283"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "database-service",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/database",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "b888ecd09bcc7172199653e4eed119673731d78a819a886dd7d746e2952615df",
            "live_uid": "1055c7d2-c574-44c7-ad64-0aa2c37eb278",
            "name": "database",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "1055c7d2-c574-44c7-ad64-0aa2c37eb278",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: database\n  name: database\nspec:\n  ports:\n    - name: \"5432\"\n      port: 5432\n      targetPort: 5432\n  selector:\n    app: database\nstatus:\n  loadBalancer: {}\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: database\n  name: database\nspec:\n  ports:\n  - name: \"5432\"\n    port: 5432\n    targetPort: 5432\n  selector:\n    app: database\nstatus:\n  loadBalancer: {}\n",
            "yaml_incluster": "b888ecd09bcc7172199653e4eed119673731d78a819a886dd7d746e2952615df"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "frontend-deployment",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/frontend",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "611ebaebd5a9b8b60171e1da7167108bb39f23a8796737f94918ff0e351887ab",
            "live_uid": "0676a5c2-d678-4c81-8a16-3d5b384a7908",
            "name": "frontend",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "0676a5c2-d678-4c81-8a16-3d5b384a7908",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  name: frontend\n  labels:\n    app: frontend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: frontend\n  strategy: {}\n  template:\n    metadata:\n      labels:\n        app: frontend\n      creationTimestamp: null\n    spec:\n      containers:\n        - image: marques576/opentourney-frontend:latest\n          imagePullPolicy: Always\n          name: frontend\n          ports:\n            - containerPort: 80\n          resources: {}\n      restartPolicy: Always\nstatus: {}\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: frontend\n  name: frontend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: frontend\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: frontend\n    spec:\n      containers:\n      - image: marques576/opentourney-frontend:latest\n        imagePullPolicy: Always\n        name: frontend\n        ports:\n        - containerPort: 80\n        resources: {}\n      restartPolicy: Always\nstatus: {}\n",
            "yaml_incluster": "611ebaebd5a9b8b60171e1da7167108bb39f23a8796737f94918ff0e351887ab"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "frontend-service",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/frontend",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "a8a8caa2021c8562b528468aaae29c1ebb9a56b4ef458bf0f2b7541f4729cc65",
            "live_uid": "d4ea1fa7-7e91-4a15-a4e2-140c55e33dfd",
            "name": "frontend",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "d4ea1fa7-7e91-4a15-a4e2-140c55e33dfd",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: frontend\n  name: frontend\nspec:\n  ports:\n    - name: \"80\"\n      port: 80\n      targetPort: 80\n  selector:\n    app: frontend\nstatus:\n  loadBalancer: {}\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: frontend\n  name: frontend\nspec:\n  ports:\n  - name: \"80\"\n    port: 80\n    targetPort: 80\n  selector:\n    app: frontend\nstatus:\n  loadBalancer: {}\n",
            "yaml_incluster": "a8a8caa2021c8562b528468aaae29c1ebb9a56b4ef458bf0f2b7541f4729cc65"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "ingress-updater",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.k8s.io/v1/namespaces/default/ingresses/opentourney-ingress",
            "ignore_fields": null,
            "kind": "Ingress",
            "live_manifest_incluster": "6b3a1e4013258442a5c63557226ef8f4012d38be5b41b58c067dbdaae7bdf9dc",
            "live_uid": "47c69c53-0c37-44ae-80bc-ff16c866e6b4",
            "name": "opentourney-ingress",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "47c69c53-0c37-44ae-80bc-ff16c866e6b4",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: opentourney-ingress\n  #annotations:\n    #cert-manager.io/issuer: \"letsencrypt-prod\" # Specify the issuer for the certificate\nspec:\n  ingressClassName: nginx\n  #tls:\n  #  - hosts:\n  #      - marques576.eu.org\n      #secretName: example-app-tls //UNCOMMENT FOR SSL CERTIFICATE\n  rules:\n    - host: marques576.eu.org\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: frontend\n                port:\n                  number: 80\n          - path: /api\n            pathType: Prefix\n            backend:\n              service:\n                name: api\n                port:\n                  number: 3000\n          - path: /ws\n            pathType: Prefix\n            backend:\n              service:\n                name: ws\n                port:\n                  number: 8080\n",
            "yaml_body_parsed": "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: opentourney-ingress\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: marques576.eu.org\n    http:\n      paths:\n      - backend:\n          service:\n            name: frontend\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n      - backend:\n          service:\n            name: api\n            port:\n              number: 3000\n        path: /api\n        pathType: Prefix\n      - backend:\n          service:\n            name: ws\n            port:\n              number: 8080\n        path: /ws\n        pathType: Prefix\n",
            "yaml_incluster": "6b3a1e4013258442a5c63557226ef8f4012d38be5b41b58c067dbdaae7bdf9dc"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "ws-deployment",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/ws",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "671e18ca82648d8c9ad4894261bcdd7a3282e893f62a59dc328265c841d25ab3",
            "live_uid": "f802ad4d-28c0-40b3-83ef-8b5280a1c6cb",
            "name": "ws",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "f802ad4d-28c0-40b3-83ef-8b5280a1c6cb",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: ws\n  name: ws\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: ws\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: ws\n    spec:\n      containers:\n        - env:\n            - name: DATABASE_URL\n              value: postgresql://postgres:postgres@$(DATABASE_SERVICE_HOST):5432/postgres\n            - name: WSPORT\n              valueFrom:\n                configMapKeyRef:\n                  key: WSPORT\n                  name: opentourney-api-configmap\n            - name: API_URL\n              valueFrom:\n                configMapKeyRef:\n                  key: API_URL\n                  name: opentourney-api-configmap\n          image: marques576/opentourney-ws:latest\n          imagePullPolicy: Always\n          name: ws\n          ports:\n            - containerPort: 8080\n          resources: {}\n      restartPolicy: Always\nstatus: {}\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: ws\n  name: ws\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: ws\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: ws\n    spec:\n      containers:\n      - env:\n        - name: DATABASE_URL\n          value: postgresql://postgres:postgres@$(DATABASE_SERVICE_HOST):5432/postgres\n        - name: WSPORT\n          valueFrom:\n            configMapKeyRef:\n              key: WSPORT\n              name: opentourney-api-configmap\n        - name: API_URL\n          valueFrom:\n            configMapKeyRef:\n              key: API_URL\n              name: opentourney-api-configmap\n        image: marques576/opentourney-ws:latest\n        imagePullPolicy: Always\n        name: ws\n        ports:\n        - containerPort: 8080\n        resources: {}\n      restartPolicy: Always\nstatus: {}\n",
            "yaml_incluster": "671e18ca82648d8c9ad4894261bcdd7a3282e893f62a59dc328265c841d25ab3"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubectl_manifest.configmap",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "ws_service",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/ws",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "68b0379e7084ca6b7dab7b11a66bb3602a6588516e794f9091a258c41295bab1",
            "live_uid": "f38b4fa8-4dd4-43ca-b9cc-30f7a1139397",
            "name": "ws",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "f38b4fa8-4dd4-43ca-b9cc-30f7a1139397",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: ws\n  name: ws\nspec:\n  ports:\n    - name: \"8080\"\n      port: 8080\n      targetPort: 8080\n  selector:\n    app: ws\nstatus:\n  loadBalancer: {}\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: ws\n  name: ws\nspec:\n  ports:\n  - name: \"8080\"\n    port: 8080\n    targetPort: 8080\n  selector:\n    app: ws\nstatus:\n  loadBalancer: {}\n",
            "yaml_incluster": "68b0379e7084ca6b7dab7b11a66bb3602a6588516e794f9091a258c41295bab1"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "create_cert_manager_namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "cert-manager",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "cert-manager",
                "resource_version": "2397",
                "uid": "fa9d8982-f0d1-4559-9f10-298613eff1db"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "cloudflare_record.example",
            "data.kubernetes_ingress_v1.example",
            "digitalocean_kubernetes_cluster.kubernetes_cluster",
            "helm_release.ingress-nginx",
            "kubectl_manifest.api-deployment",
            "kubectl_manifest.api_service",
            "kubectl_manifest.configmap",
            "kubectl_manifest.database-deployment",
            "kubectl_manifest.database-pvc",
            "kubectl_manifest.database-service",
            "kubectl_manifest.frontend-deployment",
            "kubectl_manifest.frontend-service",
            "kubectl_manifest.ingress-updater",
            "kubectl_manifest.ws-deployment",
            "kubectl_manifest.ws_service",
            "kubernetes_namespace.ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "ingress-nginx",
                "resource_version": "1336",
                "uid": "b3b8c962-3eee-445c-b33a-0d5ad02bd7bf"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "digitalocean_kubernetes_cluster.kubernetes_cluster"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
